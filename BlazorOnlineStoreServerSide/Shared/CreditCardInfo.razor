

<EditForm Model="CardDetail">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="NameOnCard" class="form-label">Name on Card</label>
        <InputText @bind-Value="CardDetail.NameOnCard" class="form-control" placeholder="Name on Card" />
        <ValidationMessage For="@(() => CardDetail.NameOnCard)" />
    </div>
    <div class="form-group">
        <label for="CardNumber" class="form-label">Card Number</label>
        <InputText @bind-Value="CardDetail.CardNumber" class="form-control" placeholder="Card Number" />
        <ValidationMessage For="@(() => CardDetail.CardNumber)" />
    </div>
    <div class="form-group">
        <label for="CardSecurityNumber" class="form-label">Card Security Number</label>
        <input @bind-value="CardDetail.CardSecurityNumber" class="form-control" placeholder="Card Security Number" />
        <ValidationMessage For="@(() => CardDetail.CardSecurityNumber)" />
    </div>
    <div class="form-group">
        <label for="Country" class="form-label">Expiry Date</label>
        <InputDate @bind-Value="CardDetail.ExpiryDate" class="form-control" placeholder="Country" />
        <ValidationMessage For="@(() => CardDetail.ExpiryDate)" />
    </div>    
    <div class="form-group">
        <button type="button" class="btn btn-outline-info" @onclick="UpsertCardDetail" style="font-weight: bold">@UpsertButton</button>
        <button type="button" class="btn btn-outline-info" @onclick="CancelMethod" style="font-weight: bold">@CancelButton</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public CardDetailView CardDetail { get; set; } = new CardDetailView();

    [Parameter]
    public EventCallback UpsertCardDetail { get; set; }

    [Parameter]
    public EventCallback CancelMethod { get; set; }

    [Parameter]
    public string UpsertButton { get; set; }

    [Parameter]
    public string CancelButton { get; set; }

}